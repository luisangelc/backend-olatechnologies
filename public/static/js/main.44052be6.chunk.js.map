{"version":3,"sources":["api.js","component/MiListaTarea/editableLabel.style.js","component/MiListaTarea/editableLabel.js","component/MiListaTarea/index.js","component/MiListaTarea/Mi-Lista-Tareas.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","timeout","headers","labelStyle","letterSpacing","borderStyle","borderWidth","borderColor","width","color","fontWeight","cursor","editIcon","paddingLeft","defaultHeight","inputStyle","height","minWidth","buttonStyle","border","marginBottom","marginLeft","errorText","display","EditableLabel","props","toggleEditMode","state","isEditing","previewLabel","customErrorFunction","editChangeEvent","hasError","setState","cancelEditMode","labelValue","simpleLabelWithClickAction","placeholder","placeholderStyle","hoveringStyle","customEditIcon","customEditIconStyle","showPlaceholder","isEmptyOrNil","showableLabel","isHovering","Radium","getState","labelStyling","styles","style","onClick","watchForEnterClick","event","keyCode","inputOnChangeEvent","target","value","length","inputToEditLabel","customCloseIcon","customCancelIconStyle","customApproveIcon","customApproveIconStyle","type","onChange","onKeyUp","autoFocus","getErrorMessage","hideErrors","customErrorMessage","errorStyle","showErrors","errorTextStyle","Array","isArray","map","error","generate","uniqueId","this","id","showThisComponent","componentId","Component","anyPass","isEmpty","isNil","defaultProps","icon","faPencilAlt","faTimes","faCheck","MiListaTareas","componentDidMount","getTareas","handleChangeFilter","data","name","changeLabelEvent","putTask","nombre","postTarea","API","post","then","res","catch","err","console","warn","a","listaTareas","get","total","sinTerminar","terminadas","Data","Card","fluid","Content","Header","textAlign","sort","b","estatus","item","index","objStyle","cardBackground","background","taskComplete","textDecoration","wordWrap","e","_id","Meta","margin","Checkbox","checked","label","Popup","trigger","Icon","link","fontSize","fontFamily","flowing","hoverable","Grid","centered","columns","Column","as","Button","deleteTarea","put","undoTarea","delete","isOpen","optionsFilter","text","selected","className","Form","onSubmit","Field","Input","stretched","verticalAlign","Group","inline","primary","Dropdown","defaultValue","selection","options","Label","circular","marginRight","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44052be6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: `http://localhost:3000/api`,\r\n    timeout: 2000,\r\n    headers:{}\r\n});","export const labelStyle = {\r\n    letterSpacing: \"0.3px\",\r\n    borderStyle: \"none none dotted none\",\r\n    borderWidth: \"1px\",\r\n    borderColor: \"lightgray\",\r\n    width: \"fit-content\",\r\n    color: \"#333\",\r\n    \":hover\": {\r\n      fontWeight: \"bold\",\r\n      cursor: \"pointer\",\r\n      borderColor: \"#6e6e6e\"\r\n    }\r\n};\r\n  \r\nexport const editIcon = {\r\n    paddingLeft: \"5px\"\r\n};\r\n  \r\n  const defaultHeight = \"25px\";\r\n  \r\nexport const inputStyle = {\r\n    height: defaultHeight,\r\n    minWidth: \"200px\",\r\n    borderStyle: \"none none solid none\",\r\n    borderWidth: \"1px\",\r\n    borderColor: \"lightgray\",\r\n    letterSpacing: \"0.3px\"\r\n};\r\n  \r\nexport const buttonStyle = {\r\n    height: defaultHeight,\r\n    width: defaultHeight,\r\n    border: \"none\",\r\n    marginBottom: \"2px\",\r\n    marginLeft: \"5px\"\r\n};\r\n  \r\nexport const iconStyle = {\r\n    color: \"black\"\r\n};\r\n  \r\nexport const errorText = {\r\n    color: \"#ad2411\",\r\n    display: \"block\"\r\n};","import React, { Component } from \"react\";\r\nimport { anyPass, isEmpty, isNil } from \"ramda\";\r\nimport Radium from \"radium\";\r\nimport PropTypes from \"prop-types\";\r\nimport { generate } from \"short-id\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faPencilAlt, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport * as styles from \"./editableLabel.style\";\r\n\r\n/**\r\n * List of TO-DOs:\r\n *\r\n*/\r\nclass EditableLabel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n\r\n    this.state = {\r\n      uniqueId: generate(),\r\n      isEditing: false,\r\n      hasError: false,\r\n      previewLabel: this.props.labelValue\r\n    };\r\n  }\r\n\r\n  toggleEditMode = () => {\r\n    const { isEditing, previewLabel } = this.state;\r\n    const { customErrorFunction, editChangeEvent } = this.props;\r\n\r\n    if (isEditing === true) {\r\n      const hasError = customErrorFunction(previewLabel);\r\n\r\n      if (hasError) {\r\n        this.setState({ hasError });\r\n        return;\r\n      }\r\n\r\n      if (editChangeEvent) {\r\n        this.setState({ isEditing: false });\r\n        editChangeEvent(previewLabel);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({ isEditing: true });\r\n  };\r\n\r\n  cancelEditMode = () => {\r\n    const { labelValue } = this.props;\r\n    this.setState({\r\n      isEditing: false,\r\n      previewLabel: labelValue,\r\n      hasError: false\r\n    });\r\n  };\r\n\r\n  simpleLabelWithClickAction = () => {\r\n    const {\r\n      labelValue,\r\n      labelStyle,\r\n      placeholder,\r\n      placeholderStyle,\r\n      hoveringStyle,\r\n      customEditIcon,\r\n      customEditIconStyle\r\n    } = this.props;\r\n\r\n    const showPlaceholder = isEmptyOrNil(labelValue);\r\n    const showableLabel = showPlaceholder ? placeholder : labelValue;\r\n    const isHovering = Radium.getState(this.state, \"label-value\", \":hover\");\r\n\r\n    const labelStyling = [\r\n      styles.labelStyle,\r\n      !showPlaceholder && !isHovering && labelStyle,\r\n      showPlaceholder && !isHovering && placeholderStyle,\r\n      isHovering && hoveringStyle\r\n    ];\r\n\r\n    const editIcon = (\r\n      <span style={[styles.editIcon, customEditIconStyle]}>\r\n        {customEditIcon}\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <p key=\"label-value\" style={labelStyling} onClick={this.toggleEditMode}>\r\n        {showableLabel}\r\n        {isHovering && editIcon}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  watchForEnterClick = event => {\r\n    if (event.keyCode === 13) {\r\n      const { hasError } = this.state;\r\n      if (!hasError) {\r\n        this.toggleEditMode();\r\n      }\r\n    }\r\n  };\r\n\r\n  inputOnChangeEvent = event => {\r\n    const previewLabel = event.target.value;\r\n\r\n    if (previewLabel.length > 0) {\r\n      this.setState({\r\n        hasError: false,\r\n        previewLabel\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({ previewLabel });\r\n  };\r\n\r\n  inputToEditLabel = () => {\r\n    const { previewLabel } = this.state;\r\n    const {\r\n      inputStyle,\r\n      customCloseIcon,\r\n      customCancelIconStyle,\r\n      customApproveIcon,\r\n      customApproveIconStyle\r\n    } = this.props;\r\n\r\n    return [\r\n      <input\r\n        type=\"text\"\r\n        value={previewLabel}\r\n        key=\"input-value-label\"\r\n        style={[styles.inputStyle, inputStyle]}\r\n        onChange={this.inputOnChangeEvent}\r\n        onKeyUp={this.watchForEnterClick}\r\n        autoFocus\r\n      />,\r\n      <button\r\n        style={[styles.buttonStyle, customCancelIconStyle]}\r\n        key=\"input-value-cancel-button\"\r\n        onClick={this.cancelEditMode}\r\n      >\r\n        {customCloseIcon}\r\n      </button>,\r\n      <button\r\n        style={[styles.buttonStyle, customApproveIconStyle]}\r\n        key=\"input-value-approve-button\"\r\n        onClick={this.toggleEditMode}\r\n      >\r\n        {customApproveIcon}\r\n      </button>\r\n    ];\r\n  };\r\n\r\n  getErrorMessage = () => {\r\n    const { hasError } = this.state;\r\n    const { hideErrors, customErrorMessage, errorStyle } = this.props;\r\n    const showErrors = !hideErrors && hasError;\r\n    const errorTextStyle = [styles.errorText, errorStyle];\r\n\r\n    if (showErrors && Array.isArray(customErrorMessage)) {\r\n      return (\r\n        <ul style={errorTextStyle}>\r\n          {customErrorMessage.map(error => (\r\n            <li key={generate()}>{error}</li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    if (showErrors) {\r\n      return <span style={errorTextStyle}>{customErrorMessage}</span>;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  render() {\r\n    const { id, isEditing, uniqueId, style } = this.state;\r\n\r\n    const showThisComponent = isEditing\r\n      ? this.inputToEditLabel()\r\n      : this.simpleLabelWithClickAction();\r\n    const error = this.getErrorMessage();\r\n    const componentId = isEmptyOrNil(id) ? `editable-label-id-${uniqueId}` : id;\r\n\r\n    return (\r\n      <div id={componentId} key={componentId} style={style}>\r\n        {showThisComponent}\r\n        {error}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst isEmptyOrNil = anyPass([isEmpty, isNil]);\r\n\r\nEditableLabel.defaultProps = {\r\n  id: null,\r\n  hideErrors: false,\r\n  customErrorMessage: \"Invalid input entry\",\r\n  customErrorFunction: isEmptyOrNil,\r\n  customEditIcon: <FontAwesomeIcon icon={faPencilAlt} />,\r\n  customCloseIcon: <FontAwesomeIcon icon={faTimes} />,\r\n  customApproveIcon: <FontAwesomeIcon icon={faCheck} />,\r\n  placeholder: null,\r\n  customApproveIconStyle: {},\r\n  customCancelIconStyle: {},\r\n  customEditIconStyle: {},\r\n  inputStyle: {},\r\n  labelStyle: {},\r\n  errorStyle: {},\r\n  style: {},\r\n  placeholderStyle: {},\r\n  hoveringStyle: {}\r\n};\r\n\r\nEditableLabel.propTypes = {\r\n  id: PropTypes.string,\r\n  labelValue: PropTypes.string.isRequired,\r\n  editChangeEvent: PropTypes.func.isRequired,\r\n  hideErrors: PropTypes.bool,\r\n  customErrorMessage: PropTypes.oneOfType([\r\n    PropTypes.node,\r\n    PropTypes.string,\r\n    PropTypes.array\r\n  ]),\r\n  customErrorFunction: PropTypes.func,\r\n  customEditIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\r\n  customEditIconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  customCloseIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\r\n  customCancelIconStyle: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.array\r\n  ]),\r\n  customApproveIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\r\n  customApproveIconStyle: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.array\r\n  ]),\r\n  inputStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  labelStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  errorStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  placeholder: PropTypes.string,\r\n  placeholderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  hoveringStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\r\n};\r\n\r\nexport default Radium(EditableLabel);","import MiListaTareas from \"./Mi-Lista-Tareas\";\r\n\r\nexport default MiListaTareas;","import React, { Component } from \"react\";\r\nimport { Card, Header, Form, Input, Icon, Button, Grid, Checkbox, Popup, Label } from \"semantic-ui-react\";\r\nimport API from '../../api';\r\nimport \"../Tool/Style.css\";\r\nimport EditableLabel from './editableLabel';\r\n\r\nclass MiListaTareas extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nombre: \"\",\r\n            listaTareas: [],\r\n            isOpen: false,\r\n            total: 0,\r\n            terminadas: 0,\r\n            sinTerminar: 0,\r\n        };\r\n    }\r\n\r\n    /* Cargar inicial de listado de tareas */\r\n    componentDidMount = () => {\r\n        this.getTareas();\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            optionsFilter: [\r\n                { value:'1', text:'Todas' },\r\n                { value:'2', text:'Terminadas' },\r\n                { value:'3', text:'Sin Terminar' },\r\n            ],\r\n            selected: ['1'],\r\n        });\r\n    }\r\n\r\n    handleChangeFilter = data => {\r\n        this.getTareas(data.value);\r\n    }\r\n\r\n    onChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState(state => ({\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    changeLabelEvent = (data, id) => {\r\n        //this.setState({ nombre: label });\r\n        this.putTask(id, {nombre: data});\r\n    };\r\n    \r\n    /**\r\n    * Agregar una nueva tarea \r\n    */\r\n    postTarea = () => {\r\n        if (this.state.nombre) {\r\n            API.post('/nueva-tarea', { nombre: this.state.nombre })\r\n                .then(res => {\r\n                    /* Limpiar el formulario */\r\n                    this.setState({ nombre: \"\" });\r\n                    /* Refresh */\r\n                    this.getTareas();\r\n                })\r\n                .catch(err => {\r\n                    console.warn(err);\r\n                });\r\n        }\r\n    };\r\n\r\n    /* Obtener todas las tareas */\r\n    getTareas = async (value = -1) => {\r\n        let listaTareas = [];\r\n        if (value < 0)\r\n            listaTareas = await API.get('/tareas')\r\n                .then(res => {\r\n                    this.state.total = res.data.total;\r\n                    this.state.sinTerminar = res.data.sinTerminar;\r\n                    this.state.terminadas = res.data.terminadas;\r\n                    return res.data.Data; \r\n                })\r\n                .catch(err => { console.warn(err); });\r\n        else\r\n            listaTareas = await API.get(`/tareas/${value}`)\r\n                .then(res => { \r\n                    this.state.total = res.data.total;\r\n                    this.state.sinTerminar = res.data.sinTerminar;\r\n                    this.state.terminadas = res.data.terminadas;\r\n                    return res.data.Data;\r\n                })\r\n                .catch(err => { console.warn(err); });\r\n        if (!listaTareas) {\r\n            return (\r\n                <Card fluid>\r\n                    <Card.Content>\r\n                        <Card.Header textAlign=\"left\">\r\n                            <div>No se encontraron datos</div>\r\n                        </Card.Header>\r\n                    </Card.Content>\r\n                </Card>\r\n            );\r\n            return !1;\r\n        }\r\n\r\n        if(listaTareas) {\r\n            listaTareas = listaTareas.sort((a, b) => {\r\n                if(a.estatus) return 1;\r\n                else if (b.estatus) return -1;\r\n                return 0;\r\n            });\r\n        }\r\n        this.setState({\r\n            listaTareas: listaTareas.map((item, index) => {\r\n                const objStyle = {\r\n                    color: 'yellow',\r\n                    cardBackground: { background: \"white\" },\r\n                    taskComplete: { textDecoration: \"none\" }\r\n                }\r\n                if(item.estatus) {\r\n                    objStyle.color = \"green\";\r\n                    objStyle.cardBackground.background = \"beige\";\r\n                    objStyle.taskComplete[\"textDecoration\"] = \"line-through\";\r\n                }\r\n                return (\r\n                    <Card key={ index } color={ objStyle.color } fluid style={ objStyle.cardBackground }>\r\n                        <Card.Content>\r\n                            <Card.Header textAlign=\"left\" style={ objStyle.taskComplete }>\r\n                                {/* <div style={{ wordWrap: \"break-word\" }}>{ item.nombre }</div> */}\r\n                                <EditableLabel style={{ wordWrap: \"break-word\" }} labelValue={ item.nombre } \r\n                                    editChangeEvent={(data, e) => this.changeLabelEvent(data, item._id) } \r\n                                    customEditIconStyle={{ color: \"teal\" }} customCancelIconStyle={{ color: \"red\" }} customApproveIconStyle={{ color: \"green\" }}\r\n                                />\r\n                            </Card.Header>\r\n                        </Card.Content>\r\n                        <Card.Meta textAlign=\"left\" style={{ margin: '15px' }} >\r\n                            <Checkbox onChange={(e, data) => this.putTask(item._id, data) } checked={ item.estatus } label={ <label>Completada</label> } />\r\n                            \r\n                            <Popup trigger={ \r\n                                <Icon link name=\"delete\" color=\"red\" style={{ paddingLeft: '10px' }}>\r\n                                    <label style={{color: 'black', marginLeft: '5px', fontSize: '15px', fontFamily: 'sans-serif'}}>Eliminar</label>\r\n                                </Icon> \r\n                            } flowing hoverable>\r\n                                <Grid centered  columns={1}>\r\n                                    <Grid.Column textAlign='center'>\r\n                                        <Header as='h4'>Confirme si, ¿Desea eliminar esta tarea ?</Header>\r\n                                        <Button onClick={() => this.deleteTarea(item._id)}>Eliminar</Button>\r\n                                    </Grid.Column>\r\n                                </Grid>\r\n                            </Popup>\r\n                        </Card.Meta>\r\n                    </Card>\r\n                );\r\n            })\r\n        });\r\n    };\r\n\r\n    /* Actualizar una tarea (se marca como terminada) */\r\n    putTask = (id, data) => {\r\n        API.put(`/tarea/${id}`, { estatus: data.checked, nombre: data.nombre })\r\n            .then(res => {\r\n                this.getTareas();\r\n            })\r\n            .catch(err => {\r\n                console.warn(err);\r\n            });\r\n    };\r\n\r\n    /* Deshacer el estatus de la tarea de verdadero a falso */\r\n    undoTarea = index => {};\r\n\r\n    /* Eliminar una tarea de la lista*/\r\n    deleteTarea = id => {\r\n        API.delete(`/tarea/${id}`)\r\n            .then(res => {\r\n                this.getTareas();\r\n            })\r\n            .catch(err => {\r\n                console.warn(err);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Header as=\"h1\">\r\n                        <div className=\"app-header\">Mi Lista de Tareas</div>{\" \"}\r\n                    </Header>\r\n                </div>\r\n                <div className=\"app-form\">\r\n                    <Form onSubmit={ this.postTarea }>\r\n                        <Grid>\r\n                            <Grid.Column width={8}>\r\n                                <Form.Field>\r\n                                    <Input type=\"text\" name=\"nombre\" onChange={ this.onChange } value={ this.state.nombre } fluid placeholder=\"Agregar una tarea\" />\r\n                                </Form.Field>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={2} stretched verticalAlign=\"middle\">\r\n                                <Form.Group inline className=\"no-margin\">\r\n                                    <Form.Field><Button primary>Guardar</Button></Form.Field>\r\n                                </Form.Group>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={4} className=\"no-margin\">\r\n                                <Form.Dropdown placeholder='Please select' defaultValue={this.state.selected} fluid selection \r\n                                    options={ this.state.optionsFilter }\r\n                                    onChange={(e, data) => this.handleChangeFilter(data) }\r\n                                />\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                        <Grid>\r\n                            <Grid.Column width={6}>\r\n                                <Form.Group inline className=\"no-margin\">\r\n                                    <Label>Total Tareas:</Label>\r\n                                    <Label circular color={'teal'} style={{fontFamily: 'serif', fontSize: '12px', color: 'gray', marginRight: '20px'}}>{this.state.total}</Label>\r\n                                    <Label>Terminadas:</Label>\r\n                                    <Label circular color={'teal'} style={{fontFamily: 'serif', fontSize: '12px', color: 'gray', marginRight: '20px' }}>{this.state.terminadas}</Label>\r\n                                    <Label>Sin Terminar:</Label>\r\n                                    <Label circular color={'teal'} style={{fontFamily: 'serif', fontSize: '12px', color: 'white' }}>{this.state.sinTerminar}</Label>\r\n                                </Form.Group>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </Form>\r\n                </div>\r\n                <div>\r\n                    <Card.Group>{ this.state.listaTareas }</Card.Group>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default MiListaTareas;","import React from \"react\";\nimport \"./App.css\";\nimport MyTaskList from \"./component/MiListaTarea/index\";\n\nfunction App() {\n  return (\n    <div>\n      <MyTaskList></MyTaskList>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}